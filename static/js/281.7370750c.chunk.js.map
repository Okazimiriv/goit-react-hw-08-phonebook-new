{"version":3,"file":"static/js/281.7370750c.chunk.js","mappings":"8XA4BMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,KACpBC,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,KAEVC,EAAe,WAC1B,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MA4BjB,OACE,SAAC,IAAD,CAAMC,cAAc,SAASC,eAAe,SAASC,WAAW,SAAhE,UACE,UAAC,IAAD,CACEC,QAAQ,SACRC,GAAG,IACHH,eAAe,SACfC,WAAW,SAJb,WAOE,SAAC,IAAD,CAAMG,GAAIC,EAAAA,IAAQC,EAAG,GAAIC,EAAG,MAC5B,SAAC,IAAD,CAASC,MAAM,WAAf,SAA0B,cAC1B,SAAC,KAAD,CAAKC,KAAM,CAAEC,KAAM,MAAOC,GAAI,SAA9B,UACE,iBAAMC,SApCO,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfnB,GACEoB,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,SACAC,MAAK,kBACJC,EAAAA,GAAAA,QAAc,0BAA2B,CACvCC,SAAU,cAFR,IAKLC,OAAM,kBACLF,EAAAA,GAAAA,MAAY,qCAAsC,CAChDC,SAAU,cAFP,IAKTX,EAAKa,OACN,EAcO,UACE,UAAC,IAAD,CACEC,QAAS,EACTC,EAAE,OACFC,gBAAgB,iBAChBC,UAAU,KAJZ,WAME,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,cAAc,OACdC,UAAU,SAAC9C,EAAD,CAAYoB,MAAM,gBAE9B,SAAC,EAAA2B,EAAD,CAAOC,KAAK,OAAOlB,KAAK,OAAOmB,YAAY,mBAG/C,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEJ,cAAc,OACdC,UACE,SAAC,IAAD,CAAM9B,GAAIkC,EAAAA,IAAS9B,MAAM,WAAWF,EAAG,EAAGC,EAAG,OAGjD,SAAC,EAAA4B,EAAD,CAAOC,KAAK,QAAQlB,KAAK,QAAQmB,YAAY,gBAGjD,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEJ,cAAc,OACdzB,MAAM,WACN0B,UAAU,SAAC3C,EAAD,CAASiB,MAAM,gBAE3B,SAAC,EAAA2B,EAAD,CACEC,KAAMzC,EAAe,OAAS,WAC9BuB,KAAK,WACLqB,aAAa,KACbF,YAAY,cAEd,SAAC,IAAD,CAAmBG,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQjC,EAAE,UAAUkC,KAAK,KAAKC,QA/ExB,kBAAM9C,GAAiBD,EAAvB,EA+EN,SACGA,EAAe,OAAS,iBAKjC,SAAC,IAAD,CACEgD,aAAc,EACdP,KAAK,SACLQ,QAAQ,QACRC,YAAY,OACZL,MAAM,OALR,SAMC,wBASd,ECpIc,SAASM,IACtB,OACE,4BAEE,2BAAO,kBAEP,SAACrD,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { toast } from 'react-hot-toast';\n\nimport { useState } from 'react';\nimport { Icon } from '@chakra-ui/react';\nimport { MdEmail } from 'react-icons/md';\n// import { GiPadlock } from 'react-icons/gi';\n\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  // Link,\n  // Avatar,\n  FormControl,\n  // FormHelperText,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { FaUserAlt, FaLock } from 'react-icons/fa';\nimport { FcLock } from 'react-icons/fc';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(() =>\n        toast.success('Operation successfully!', {\n          position: 'top-center',\n        })\n      )\n      .catch(() =>\n        toast.error('Something went wrong... Try again.', {\n          position: 'top-center',\n        })\n      );\n    form.reset();\n  };\n\n  return (\n    <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {/* <Avatar bg=\"teal.500\" /> */}\n        <Icon as={FcLock} w={50} h={50} />\n        <Heading color=\"gray.600\">Register</Heading>\n        <Box minW={{ base: '90%', md: '468px' }}>\n          <form onSubmit={handleSubmit}>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input type=\"text\" name=\"name\" placeholder=\"Username\" />\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={\n                      <Icon as={MdEmail} color=\"gray.300\" w={5} h={5} />\n                    }\n                  />\n                  <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    autoComplete=\"on\"\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n              >\n                Register\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/authOperations';\n// import { Label, Form } from './RegisterForm.styled';\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       register({\n//         name: form.elements.name.value,\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <Form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <Label>\n//         Username\n//         <input type=\"text\" name=\"name\" />\n//       </Label>\n//       <Label>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </Label>\n//       <Label>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </Label>\n//       <button type=\"submit\">Register</button>\n//     </Form>\n//   );\n// };\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Registration</title>\n      {/* </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","RegisterForm","useState","showPassword","setShowPassword","dispatch","useDispatch","flexDirection","justifyContent","alignItems","flexDir","mb","as","FcLock","w","h","color","minW","base","md","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","then","toast","position","catch","reset","spacing","p","backgroundColor","boxShadow","pointerEvents","children","I","type","placeholder","MdEmail","autoComplete","width","size","onClick","borderRadius","variant","colorScheme","Register"],"sourceRoot":""}